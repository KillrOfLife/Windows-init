# process names are case-insensitive
# you can use 'master' to indicate the master channel, or a list of process names to create a group
# you can use 'mic' to control your mic input level (uses the default recording device)
# you can use 'deej.unmapped' to control all apps that aren't bound to any slider (this ignores master, system, mic and device-targeting sessions) (experimental)
# windows only - you can use 'deej.current' to control the currently active app (whether full-screen or not) (experimental)
# windows only - you can use a device's full name, i.e. "Speakers (Realtek High Definition Audio)", to bind it. this works for both output and input devices
# windows only - you can use 'system' to control the "system sounds" volume
# important: slider indexes start at 0, regardless of which analog pins you're using!
slider_mapping:
  0: master
  1: 
    - brave.exe
    - Spotify.exe
    - plex.exe
    - RuntimeBroker.exe
    - Netflix
    
  2: 
    - GenshinImpact.exe
    - rocketleague.exe
    - pathofexile_x64.exe
    - javaw.exe
    - AWayOut.exe
    - Paladins.exe
    - BloonsTD6.exe
    - DivineKnockout.exe
    - RDR2.exe
    - ScarletNexus-Win64-Shipping
    - Overwatch.exe
    - destiny2.exe
    - Titanfall2.exe
    - portal2.exe
    - TrickyTowers.exe
    - Human.exe
    - Firewatch.exe
    - Builder's Journey.exe
    - starrail.exe
    - csgo.exe
    - SlimeRancher2.exe
    - HogwartsLegacy.exe
    - Stray.exe
    - Stray-Win64-Shipping.exe
    - Risk of Rain 2.exe
    - Techtonica.exe
    - PaliaClient-Win64-Shipping.exe
    - Warframe.x64.exe


  3: deej.current
  4: deej.unmapped

# set this to true if you want the controls inverted (i.e. top is 0%, bottom is 100%)
invert_sliders: false

# settings for connecting to the arduino board
com_port: COM3
baud_rate: 9600

# adjust the amount of signal noise reduction depending on your hardware quality
# supported values are "low" (excellent hardware), "default" (regular hardware) or "high" (bad, noisy hardware)
noise_reduction: default
